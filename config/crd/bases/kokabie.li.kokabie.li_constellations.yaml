---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: constellations.kokabie.li.kokabie.li
spec:
  group: kokabie.li.kokabie.li
  names:
    kind: Constellation
    listKind: ConstellationList
    plural: constellations
    singular: constellation
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Constellation is the Schema for the constellations API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ConstellationSpec defines the desired state of Constellation
            properties:
              filters:
                description: INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Filters is a list of filters that are used to select the data interfaces
                  and data processes If empty, all data interfaces and data processes
                  are used
                items:
                  properties:
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels to filter for, if empty all labels are used
                      type: object
                    namespace:
                      description: Namespace to filter for, if empty all namespaces
                        are used
                      items:
                        type: string
                      type: array
                  type: object
                type: array
            type: object
          status:
            description: ConstellationStatus defines the observed state of Constellation
            properties:
              constellationResult:
                description: ConstellationResult is the result of the constellation
                properties:
                  dataInterfaceList:
                    items:
                      properties:
                        description:
                          description: Description is a human-readable description
                            of the data interface
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: Labels is a set of labels for the data interface
                          type: object
                        name:
                          description: Name is the displayed name of the data interface
                          type: string
                        reference:
                          description: Reference is a cluster-wide unique identifier
                            for the data interface
                          type: string
                        type:
                          description: Type is the type of the data interface (e.g.
                            "topic", "queue", "database", "file")
                          type: string
                      type: object
                    type: array
                  dataProcessList:
                    items:
                      description: DataProcess is the Schema for the dataprocesses
                        API
                      properties:
                        apiVersion:
                          description: 'APIVersion defines the versioned schema of
                            this representation of an object. Servers should convert
                            recognized schemas to the latest internal value, and may
                            reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                          type: string
                        kind:
                          description: 'Kind is a string value representing the REST
                            resource this object represents. Servers may infer this
                            from the endpoint the client submits requests to. Cannot
                            be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        metadata:
                          type: object
                        spec:
                          description: DataProcessSpec defines the desired state of
                            DataProcess
                          properties:
                            description:
                              description: Description is a human-readable description
                                of the data process
                              type: string
                            inputs:
                              description: Inputs is a list of data interfaces that
                                are used as input for the data process
                              items:
                                description: Edge is a data interface that is used
                                  as input or output for a data process
                                properties:
                                  description:
                                    description: Description is a human-readable description
                                      of the data interface
                                    type: string
                                  info:
                                    description: Info is a human-readable description
                                      of the data interface
                                    type: string
                                  reference:
                                    description: References the data interface
                                    type: string
                                  trigger:
                                    description: Trigger is true if the data interface
                                      triggers further processing Outgoing edges to
                                      kafka topics usually have this set to true while
                                      incoming edges from kafka topics usually have
                                      this set to true.
                                    type: boolean
                                type: object
                              type: array
                            name:
                              description: Name is the displayed name of the data
                                process
                              type: string
                            outputs:
                              description: Outputs is a list of data interfaces that
                                are used as output for the data process
                              items:
                                description: Edge is a data interface that is used
                                  as input or output for a data process
                                properties:
                                  description:
                                    description: Description is a human-readable description
                                      of the data interface
                                    type: string
                                  info:
                                    description: Info is a human-readable description
                                      of the data interface
                                    type: string
                                  reference:
                                    description: References the data interface
                                    type: string
                                  trigger:
                                    description: Trigger is true if the data interface
                                      triggers further processing Outgoing edges to
                                      kafka topics usually have this set to true while
                                      incoming edges from kafka topics usually have
                                      this set to true.
                                    type: boolean
                                type: object
                              type: array
                            type:
                              description: Type is the type of the data process (e.g.
                                "spring-cloud-stream", "kafka-streams", "spark-streaming")
                              type: string
                          type: object
                        status:
                          description: DataProcessStatus defines the observed state
                            of DataProcess
                          properties:
                            loaded:
                              description: Loaded is true if the data process is loaded
                                into the system
                              type: boolean
                            missingDataInterfaces:
                              description: 'Important: Run "make" to regenerate code
                                after modifying this file'
                              items:
                                type: string
                              type: array
                          type: object
                      type: object
                    type: array
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
